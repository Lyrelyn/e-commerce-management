<?xml version="1.0" encoding="UTF-8" ?>
<!--定义Mapper映射文件的约束和基本结构-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.OrderMapper">
    <!--自定义结果集ResultMap-->
    <resultMap id="orderResultMap" type="org.example.bean.Order">
        <id column="id" property="id" />
        <result column="order_id" property="orderId" />
        <result column="customer_name" property="customerName" />
        <result column="customer_phone" property="customerPhone" />
        <result column="total_price" property="totalPrice" />
        <result column="status" property="status" />
        <result column="created_time" property="createdTime" />
        <result column="updated_time" property="updatedTime" />
        <result column="remark" property="remark" />

        <!--封装exprList-->
        <collection property="orderItemList" ofType="org.example.bean.OrderItem">
            <id column="orderItemId" property="id" />
            <result column="orderId" property="orderId" />
            <result column="commodityName" property="commodityName" />
            <result column="commodityPrice" property="price" />
            <result column="commodityNum" property="number" />
        </collection>
    </resultMap>

    <select id="getById" resultMap="orderResultMap">
        select o.*,
               oi.id as orderItemId,
               oi.order_id as orderId,
               oi.commodity_name as commodityName,
               oi.price as commodityPrice,
               oi.number as commodityNum
        from  `order` o left join order_item oi on o.order_id = oi.order_id
        where o.id = #{id}
    </select>

    <insert id="insert" parameterType="org.example.bean.Order" useGeneratedKeys="true" keyProperty="id">
        insert into `order`(order_id,customer_name,customer_phone,total_price,status,created_time,updated_time,remark)
        values
        (#{orderId},#{customerName},#{customerPhone},#{totalPrice},#{status},#{createdTime},#{updatedTime},#{remark})
    </insert>

    <update id="updateById">
        update `order`
        <set>
            <if test="orderId!= null and orderId!= ''">
                order_id = #{orderId},
            </if>
            <if test="customerName!= null and customerName!= ''">
                customer_name = #{customerName},
            </if>
            <if test="customerPhone!= null and customerPhone!= ''">
                customer_phone = #{customerPhone},
            </if>
            <if test="totalPrice!= null and totalPrice!= ''">
                total_price = #{totalPrice},
            </if>
            <if test="status!= null and status!= ''">
                status = #{status},
            </if>
            <if test="updatedTime!= null">
                updated_time = #{updatedTime},
            </if>
            <if test="remark!= null and remark!= ''">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteByIds">
        delete from `order` where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="list" resultType="org.example.bean.Order">
        select * from `order`
        <where>
            <if test="orderId!= null">
                and order_id = #{orderId}
            </if>
            <if test="customerName!= null">
                and customer_name like concat('%', #{customerName}, '%')
            </if>
        </where>
    </select>


</mapper>